name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            platform: linux
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            platform: windows
          - os: macos-latest
            target: x86_64-apple-darwin
            platform: macos-intel
          - os: macos-latest
            target: aarch64-apple-darwin
            platform: macos-arm

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Build Next.js
        run: pnpm build

      - name: Build Tauri application
        run: |
          if [[ "${{ matrix.target }}" == *"apple-darwin"* ]]; then
            # For macOS, build only the app bundle, not DMG
            pnpm tauri build --target ${{ matrix.target }} --config src-tauri/tauri.conf.json
          else
            # For other platforms, build normally
            pnpm tauri build --target ${{ matrix.target }}
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: moonraker-host-scanner-${{ matrix.platform }}
          path: src-tauri/target/${{ matrix.target }}/release/bundle/
          retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            moonraker-host-scanner-linux/**/*
            moonraker-host-scanner-windows/**/*
            moonraker-host-scanner-macos-intel/**/*
            moonraker-host-scanner-macos-arm/**/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Type check
        run: npx tsc --noEmit --skipLibCheck

      - name: Lint
        run: pnpm lint

      - name: Build test
        run: pnpm build
