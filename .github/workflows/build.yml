name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            platform: windows
          - os: macos-latest
            target: x86_64-apple-darwin
            platform: macos-intel
          - os: macos-latest
            target: aarch64-apple-darwin
            platform: macos-arm

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Rust targets
        run: |
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            rustup target add x86_64-pc-windows-msvc
          elif [[ "${{ matrix.target }}" == *"apple-darwin"* ]]; then
            rustup target add x86_64-apple-darwin
            rustup target add aarch64-apple-darwin
          fi

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js cache
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
          # Install webkit dependencies (try multiple versions)
          sudo apt-get install -y libwebkit2gtk-4.1-dev || sudo apt-get install -y libwebkit2gtk-4.0-dev || sudo apt-get install -y libwebkit2gtk-3.0-dev || echo "WebKit package not found, continuing..."
          # Additional dependencies that might be needed
          sudo apt-get install -y libssl-dev libasound2-dev

      - name: Install dependencies
        run: pnpm install

      - name: Build Next.js
        run: pnpm build

      - name: Build Tauri application (Windows)
        if: matrix.os == 'windows-latest'
        run: pnpm tauri build --target ${{ matrix.target }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Tauri application (macOS)
        if: matrix.os == 'macos-latest'
        run: pnpm tauri build --target ${{ matrix.target }} --config src-tauri/tauri.conf.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: moonraker-host-scanner-${{ matrix.platform }}
          path: src-tauri/target/${{ matrix.target }}/release/bundle/
          retention-days: 30

  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Rust targets
        run: rustup target add x86_64-unknown-linux-gnu

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js cache
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
          # Try to install webkit (optional)
          sudo apt-get install -y libwebkit2gtk-4.1-dev || sudo apt-get install -y libwebkit2gtk-4.0-dev || echo "WebKit not available, continuing..."

      - name: Install dependencies
        run: pnpm install

      - name: Build Next.js
        run: pnpm build

      - name: Build Tauri application
        run: pnpm tauri build --target x86_64-unknown-linux-gnu
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: moonraker-host-scanner-linux
          path: src-tauri/target/x86_64-unknown-linux-gnu/release/bundle/
          retention-days: 30

  release:
    needs: [build, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            moonraker-host-scanner-linux/**/*
            moonraker-host-scanner-windows/**/*
            moonraker-host-scanner-macos-intel/**/*
            moonraker-host-scanner-macos-arm/**/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
