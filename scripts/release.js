#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ª–∏–∑–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –≤–µ—Ä—Å–∏–∏ –∏ git tag
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node scripts/release.js <version> [message]
 * –ü—Ä–∏–º–µ—Ä: node scripts/release.js 0.1.1 "–ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏"
 */

const { execSync } = require('child_process');
const { updateVersion, validateVersion } = require('./update-version.js');

function runCommand(command, description) {
  try {
    console.log(`üîÑ ${description}...`);
    const result = execSync(command, { encoding: 'utf8', stdio: 'pipe' });
    console.log(`‚úÖ ${description} –∑–∞–≤–µ—Ä—à–µ–Ω–æ`);
    return result;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ ${description}:`, error.message);
    throw error;
  }
}

function checkGitStatus() {
  try {
    const status = execSync('git status --porcelain', { encoding: 'utf8' });
    if (status.trim()) {
      console.error('‚ùå –ï—Å—Ç—å –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è. –°–Ω–∞—á–∞–ª–∞ –∑–∞–∫–æ–º–º–∏—Ç—å—Ç–µ –∏—Ö:');
      console.error(status);
      process.exit(1);
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ git —Å—Ç–∞—Ç—É—Å–∞:', error.message);
    process.exit(1);
  }
}

function checkGitTag(tag) {
  try {
    execSync(`git rev-parse v${tag}`, { stdio: 'ignore' });
    console.error(`‚ùå –¢–µ–≥ v${tag} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
    process.exit(1);
  } catch (error) {
    // –¢–µ–≥ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —ç—Ç–æ —Ö–æ—Ä–æ—à–æ
  }
}

function createRelease(version, message = '') {
  const tag = `v${version}`;
  const releaseMessage = message || `Release ${tag}`;

  console.log(`üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞ ${tag}...`);
  console.log(`üìù –°–æ–æ–±—â–µ–Ω–∏–µ: ${releaseMessage}`);
  console.log('');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º git —Å—Ç–∞—Ç—É—Å
  checkGitStatus();

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π —Ç–µ–≥
  checkGitTag(version);

  // –û–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Ä—Å–∏–∏ –≤–æ –≤—Å–µ—Ö —Ñ–∞–π–ª–∞—Ö
  updateVersion(version);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–µ—Ä—Å–∏—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–∏–ª–∞—Å—å
  try {
    const packageVersion = execSync('node -p "require(\'./package.json\').version"', { encoding: 'utf8' }).trim();
    if (packageVersion !== version) {
      console.error(`‚ùå –û—à–∏–±–∫–∞: –≤–µ—Ä—Å–∏—è –≤ package.json (${packageVersion}) –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∑–∞–ø—Ä–æ—à–µ–Ω–Ω–æ–π (${version})`);
      process.exit(1);
    }
    console.log(`‚úÖ –í–µ—Ä—Å–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ ${version}`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–µ—Ä—Å–∏–∏:', error.message);
    process.exit(1);
  }

  // –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–µ—Ä—Å–∏–∏
  try {
    runCommand('git add .', '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ git');
    const commitMessage = `chore: bump version to ${version}

${releaseMessage}`;
    runCommand(`git commit -m "${commitMessage}"`, '–ö–æ–º–º–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤–µ—Ä—Å–∏–∏');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–º–º–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤–µ—Ä—Å–∏–∏');
    process.exit(1);
  }

  // –°–æ–∑–¥–∞–µ–º git tag
  try {
    runCommand(`git tag -a ${tag} -m "${releaseMessage}"`, '–°–æ–∑–¥–∞–Ω–∏–µ git —Ç–µ–≥–∞');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ git —Ç–µ–≥–∞');
    process.exit(1);
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º —Ç–µ–≥–µ
  try {
    const tagInfo = execSync(`git show ${tag} --stat`, { encoding: 'utf8' });
    console.log('\nüìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º —Ç–µ–≥–µ:');
    console.log(tagInfo);
  } catch (error) {
    console.log('‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–≥–µ');
  }

  console.log('\nüéâ –†–µ–ª–∏–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!');
  console.log(`üì¶ –¢–µ–≥: ${tag}`);
  console.log(`üìù –°–æ–æ–±—â–µ–Ω–∏–µ: ${releaseMessage}`);
  console.log('');
  console.log('üì§ –î–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:');
  console.log(`   git push origin ${tag}`);
  console.log('   git push origin main');
}

function main() {
  const args = process.argv.slice(2);
  
  if (args.length === 0) {
    console.log('üìñ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node scripts/release.js <version> [message]');
    console.log('üìñ –ü—Ä–∏–º–µ—Ä: node scripts/release.js 0.1.1 "–ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏"');
    console.log('üìñ –ü—Ä–∏–º–µ—Ä: node scripts/release.js 0.1.1');
    process.exit(1);
  }

  const version = args[0];
  const message = args[1] || '';

  validateVersion(version);
  createRelease(version, message);
}

if (require.main === module) {
  main();
}

module.exports = { createRelease };
